<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>SharkLib</title>
		<description>Welcome to SharkLib</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Course 12 First VTK project</title>
				<description>&lt;p&gt;It is very import. I used lots of time to start my first VTK project. test&lt;/p&gt;

&lt;p&gt;Set surface for the project&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  QSurfaceFormat::setDefaultFormat(QVTKOpenGLNativeWidget::defaultFormat());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial module&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VTK_MODULE_INIT(vtkRenderingOpenGL2); // VTK was built with vtkRenderingOpenGL2
VTK_MODULE_INIT(vtkInteractionStyle);
VTK_MODULE_INIT( vtkRenderingFreeType );
VTK_MODULE_INIT(vtkRenderingContextOpenGL2);

VTK_MODULE_INIT(vtkRenderingGL2PSOpenGL2);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the real example to create a VTK Object and show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 1, create a data source;
  vtkCylinderSource *cylinder = vtkCylinderSource::New();
  cylinder-&amp;gt;SetHeight( 3.0 );
  cylinder-&amp;gt;SetRadius( 1.0 );
  cylinder-&amp;gt;SetResolution( 4 );

  //step 2: map data to a pipeline
  vtkPolyDataMapper *cylinderMapper = vtkPolyDataMapper::New();
  cylinderMapper-&amp;gt;SetInputConnection( cylinder-&amp;gt;GetOutputPort() );

  //step 3: create a actor and represente the pipeline
  vtkActor *actor = vtkActor::New();
  actor-&amp;gt;SetMapper( cylinderMapper );

  //step4 :create a render and set the actor to it
  vtkRenderer *render= vtkRenderer::New();
  render-&amp;gt;AddActor( actor );
  render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );


  //step 5: set it to a window:
  auto vw = new  QVTKOpenGLWidget(this) ;
  vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
  ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, &quot;My Cylinder&quot;);
  renWin-&amp;gt;AddRenderer( render );
  renWin-&amp;gt;SetSize( 300, 300 );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Sun, 12 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/12/vtk-course12.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/12/vtk-course12.html</guid>
			</item>
		
			<item>
				<title>Course 11 First VTK project</title>
				<description>&lt;p&gt;It is very import. I used lots of time to start my first VTK project. test&lt;/p&gt;

&lt;p&gt;Set surface for the project&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  QSurfaceFormat::setDefaultFormat(QVTKOpenGLNativeWidget::defaultFormat());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial module&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VTK_MODULE_INIT(vtkRenderingOpenGL2); // VTK was built with vtkRenderingOpenGL2
VTK_MODULE_INIT(vtkInteractionStyle);
VTK_MODULE_INIT( vtkRenderingFreeType );
VTK_MODULE_INIT(vtkRenderingContextOpenGL2);

VTK_MODULE_INIT(vtkRenderingGL2PSOpenGL2);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the real example to create a VTK Object and show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 1, create a data source;
  vtkCylinderSource *cylinder = vtkCylinderSource::New();
  cylinder-&amp;gt;SetHeight( 3.0 );
  cylinder-&amp;gt;SetRadius( 1.0 );
  cylinder-&amp;gt;SetResolution( 4 );

  //step 2: map data to a pipeline
  vtkPolyDataMapper *cylinderMapper = vtkPolyDataMapper::New();
  cylinderMapper-&amp;gt;SetInputConnection( cylinder-&amp;gt;GetOutputPort() );

  //step 3: create a actor and represente the pipeline
  vtkActor *actor = vtkActor::New();
  actor-&amp;gt;SetMapper( cylinderMapper );

  //step4 :create a render and set the actor to it
  vtkRenderer *render= vtkRenderer::New();
  render-&amp;gt;AddActor( actor );
  render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );


  //step 5: set it to a window:
  auto vw = new  QVTKOpenGLWidget(this) ;
  vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
  ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, &quot;My Cylinder&quot;);
  renWin-&amp;gt;AddRenderer( render );
  renWin-&amp;gt;SetSize( 300, 300 );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Sat, 11 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/11/vtk-course11.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/11/vtk-course11.html</guid>
			</item>
		
			<item>
				<title>Course 10 First VTK project</title>
				<description>&lt;p&gt;It is very import. I used lots of time to start my first VTK project. test&lt;/p&gt;

&lt;p&gt;Set surface for the project&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  QSurfaceFormat::setDefaultFormat(QVTKOpenGLNativeWidget::defaultFormat());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial module&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VTK_MODULE_INIT(vtkRenderingOpenGL2); // VTK was built with vtkRenderingOpenGL2
VTK_MODULE_INIT(vtkInteractionStyle);
VTK_MODULE_INIT( vtkRenderingFreeType );
VTK_MODULE_INIT(vtkRenderingContextOpenGL2);

VTK_MODULE_INIT(vtkRenderingGL2PSOpenGL2);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the real example to create a VTK Object and show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 1, create a data source;
  vtkCylinderSource *cylinder = vtkCylinderSource::New();
  cylinder-&amp;gt;SetHeight( 3.0 );
  cylinder-&amp;gt;SetRadius( 1.0 );
  cylinder-&amp;gt;SetResolution( 4 );

  //step 2: map data to a pipeline
  vtkPolyDataMapper *cylinderMapper = vtkPolyDataMapper::New();
  cylinderMapper-&amp;gt;SetInputConnection( cylinder-&amp;gt;GetOutputPort() );

  //step 3: create a actor and represente the pipeline
  vtkActor *actor = vtkActor::New();
  actor-&amp;gt;SetMapper( cylinderMapper );

  //step4 :create a render and set the actor to it
  vtkRenderer *render= vtkRenderer::New();
  render-&amp;gt;AddActor( actor );
  render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );


  //step 5: set it to a window:
  auto vw = new  QVTKOpenGLWidget(this) ;
  vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
  ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, &quot;My Cylinder&quot;);
  renWin-&amp;gt;AddRenderer( render );
  renWin-&amp;gt;SetSize( 300, 300 );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Fri, 10 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/10/vtk-course10.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/10/vtk-course10.html</guid>
			</item>
		
			<item>
				<title>Course 9 First VTK project</title>
				<description>&lt;p&gt;It is very import. I used lots of time to start my first VTK project. test&lt;/p&gt;

&lt;p&gt;Set surface for the project&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  QSurfaceFormat::setDefaultFormat(QVTKOpenGLNativeWidget::defaultFormat());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial module&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VTK_MODULE_INIT(vtkRenderingOpenGL2); // VTK was built with vtkRenderingOpenGL2
VTK_MODULE_INIT(vtkInteractionStyle);
VTK_MODULE_INIT( vtkRenderingFreeType );
VTK_MODULE_INIT(vtkRenderingContextOpenGL2);

VTK_MODULE_INIT(vtkRenderingGL2PSOpenGL2);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the real example to create a VTK Object and show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 1, create a data source;
  vtkCylinderSource *cylinder = vtkCylinderSource::New();
  cylinder-&amp;gt;SetHeight( 3.0 );
  cylinder-&amp;gt;SetRadius( 1.0 );
  cylinder-&amp;gt;SetResolution( 4 );

  //step 2: map data to a pipeline
  vtkPolyDataMapper *cylinderMapper = vtkPolyDataMapper::New();
  cylinderMapper-&amp;gt;SetInputConnection( cylinder-&amp;gt;GetOutputPort() );

  //step 3: create a actor and represente the pipeline
  vtkActor *actor = vtkActor::New();
  actor-&amp;gt;SetMapper( cylinderMapper );

  //step4 :create a render and set the actor to it
  vtkRenderer *render= vtkRenderer::New();
  render-&amp;gt;AddActor( actor );
  render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );


  //step 5: set it to a window:
  auto vw = new  QVTKOpenGLWidget(this) ;
  vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
  ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, &quot;My Cylinder&quot;);
  renWin-&amp;gt;AddRenderer( render );
  renWin-&amp;gt;SetSize( 300, 300 );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Thu, 09 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/09/vtk-course9.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/09/vtk-course9.html</guid>
			</item>
		
			<item>
				<title>Course 8 First VTK project</title>
				<description>&lt;p&gt;It is very import. I used lots of time to start my first VTK project. test&lt;/p&gt;

&lt;p&gt;Set surface for the project&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  QSurfaceFormat::setDefaultFormat(QVTKOpenGLNativeWidget::defaultFormat());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial module&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VTK_MODULE_INIT(vtkRenderingOpenGL2); // VTK was built with vtkRenderingOpenGL2
VTK_MODULE_INIT(vtkInteractionStyle);
VTK_MODULE_INIT( vtkRenderingFreeType );
VTK_MODULE_INIT(vtkRenderingContextOpenGL2);

VTK_MODULE_INIT(vtkRenderingGL2PSOpenGL2);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the real example to create a VTK Object and show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 1, create a data source;
  vtkCylinderSource *cylinder = vtkCylinderSource::New();
  cylinder-&amp;gt;SetHeight( 3.0 );
  cylinder-&amp;gt;SetRadius( 1.0 );
  cylinder-&amp;gt;SetResolution( 4 );

  //step 2: map data to a pipeline
  vtkPolyDataMapper *cylinderMapper = vtkPolyDataMapper::New();
  cylinderMapper-&amp;gt;SetInputConnection( cylinder-&amp;gt;GetOutputPort() );

  //step 3: create a actor and represente the pipeline
  vtkActor *actor = vtkActor::New();
  actor-&amp;gt;SetMapper( cylinderMapper );

  //step4 :create a render and set the actor to it
  vtkRenderer *render= vtkRenderer::New();
  render-&amp;gt;AddActor( actor );
  render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );


  //step 5: set it to a window:
  auto vw = new  QVTKOpenGLWidget(this) ;
  vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
  ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, &quot;My Cylinder&quot;);
  renWin-&amp;gt;AddRenderer( render );
  renWin-&amp;gt;SetSize( 300, 300 );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Wed, 08 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/08/vtk-course8.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/08/vtk-course8.html</guid>
			</item>
		
			<item>
				<title>VTK 7 - Cube and Texture</title>
				<description>&lt;p&gt;It is very import. I used lots of time to start my first VTK project. test&lt;/p&gt;

&lt;p&gt;Set surface for the project&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  QSurfaceFormat::setDefaultFormat(QVTKOpenGLNativeWidget::defaultFormat());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial module&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VTK_MODULE_INIT(vtkRenderingOpenGL2); // VTK was built with vtkRenderingOpenGL2
VTK_MODULE_INIT(vtkInteractionStyle);
VTK_MODULE_INIT( vtkRenderingFreeType );
VTK_MODULE_INIT(vtkRenderingContextOpenGL2);

VTK_MODULE_INIT(vtkRenderingGL2PSOpenGL2);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the real example to create a VTK Object and show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 1, create a data source;
  vtkCylinderSource *cylinder = vtkCylinderSource::New();
  cylinder-&amp;gt;SetHeight( 3.0 );
  cylinder-&amp;gt;SetRadius( 1.0 );
  cylinder-&amp;gt;SetResolution( 4 );

  //step 2: map data to a pipeline
  vtkPolyDataMapper *cylinderMapper = vtkPolyDataMapper::New();
  cylinderMapper-&amp;gt;SetInputConnection( cylinder-&amp;gt;GetOutputPort() );

  //step 3: create a actor and represente the pipeline
  vtkActor *actor = vtkActor::New();
  actor-&amp;gt;SetMapper( cylinderMapper );

  //step4 :create a render and set the actor to it
  vtkRenderer *render= vtkRenderer::New();
  render-&amp;gt;AddActor( actor );
  render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );


  //step 5: set it to a window:
  auto vw = new  QVTKOpenGLWidget(this) ;
  vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
  ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, &quot;My Cylinder&quot;);
  renWin-&amp;gt;AddRenderer( render );
  renWin-&amp;gt;SetSize( 300, 300 );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Tue, 07 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/07/vtk-course7.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/07/vtk-course7.html</guid>
			</item>
		
			<item>
				<title>VTK 6 - Cube</title>
				<description>&lt;p&gt;It is very import. I used lots of time to start my first VTK project. test&lt;/p&gt;

&lt;p&gt;Set surface for the project&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  QSurfaceFormat::setDefaultFormat(QVTKOpenGLNativeWidget::defaultFormat());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial module&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VTK_MODULE_INIT(vtkRenderingOpenGL2); // VTK was built with vtkRenderingOpenGL2
VTK_MODULE_INIT(vtkInteractionStyle);
VTK_MODULE_INIT( vtkRenderingFreeType );
VTK_MODULE_INIT(vtkRenderingContextOpenGL2);

VTK_MODULE_INIT(vtkRenderingGL2PSOpenGL2);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the real example to create a VTK Object and show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 1, create a data source;
  vtkCylinderSource *cylinder = vtkCylinderSource::New();
  cylinder-&amp;gt;SetHeight( 3.0 );
  cylinder-&amp;gt;SetRadius( 1.0 );
  cylinder-&amp;gt;SetResolution( 4 );

  //step 2: map data to a pipeline
  vtkPolyDataMapper *cylinderMapper = vtkPolyDataMapper::New();
  cylinderMapper-&amp;gt;SetInputConnection( cylinder-&amp;gt;GetOutputPort() );

  //step 3: create a actor and represente the pipeline
  vtkActor *actor = vtkActor::New();
  actor-&amp;gt;SetMapper( cylinderMapper );

  //step4 :create a render and set the actor to it
  vtkRenderer *render= vtkRenderer::New();
  render-&amp;gt;AddActor( actor );
  render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );


  //step 5: set it to a window:
  auto vw = new  QVTKOpenGLWidget(this) ;
  vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
  ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, &quot;My Cylinder&quot;);
  renWin-&amp;gt;AddRenderer( render );
  renWin-&amp;gt;SetSize( 300, 300 );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Mon, 06 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/06/vtk-course6.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/06/vtk-course6.html</guid>
			</item>
		
			<item>
				<title>VTK 5 - Cone and Box widget</title>
				<description>&lt;p&gt;It is very import. I used lots of time to start my first VTK project. test&lt;/p&gt;

&lt;p&gt;Set surface for the project&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  QSurfaceFormat::setDefaultFormat(QVTKOpenGLNativeWidget::defaultFormat());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Initial module&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VTK_MODULE_INIT(vtkRenderingOpenGL2); // VTK was built with vtkRenderingOpenGL2
VTK_MODULE_INIT(vtkInteractionStyle);
VTK_MODULE_INIT( vtkRenderingFreeType );
VTK_MODULE_INIT(vtkRenderingContextOpenGL2);

VTK_MODULE_INIT(vtkRenderingGL2PSOpenGL2);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;the real example to create a VTK Object and show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 1, create a data source;
  vtkCylinderSource *cylinder = vtkCylinderSource::New();
  cylinder-&amp;gt;SetHeight( 3.0 );
  cylinder-&amp;gt;SetRadius( 1.0 );
  cylinder-&amp;gt;SetResolution( 4 );

  //step 2: map data to a pipeline
  vtkPolyDataMapper *cylinderMapper = vtkPolyDataMapper::New();
  cylinderMapper-&amp;gt;SetInputConnection( cylinder-&amp;gt;GetOutputPort() );

  //step 3: create a actor and represente the pipeline
  vtkActor *actor = vtkActor::New();
  actor-&amp;gt;SetMapper( cylinderMapper );

  //step4 :create a render and set the actor to it
  vtkRenderer *render= vtkRenderer::New();
  render-&amp;gt;AddActor( actor );
  render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );


  //step 5: set it to a window:
  auto vw = new  QVTKOpenGLWidget(this) ;
  vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
  ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, &quot;My Cylinder&quot;);
  renWin-&amp;gt;AddRenderer( render );
  renWin-&amp;gt;SetSize( 300, 300 );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
				<pubDate>Sun, 05 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/05/vtk-course5.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/05/vtk-course5.html</guid>
			</item>
		
			<item>
				<title>VTK 4 - Cone and Axes</title>
				<description>&lt;p&gt;Base on couse 2, Changed step 4 to&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;4, Create a QVTKOpenGLWidget&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 0: set it to a window:
auto vw = new  QVTKOpenGLWidget(this) ;
vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, __FUNCTION__);
  
vtkRenderer *render= vtkRenderer::New();
  
render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );
  
vtkSmartPointer&amp;lt;vtkConeSource&amp;gt; coneSource = vtkSmartPointer&amp;lt;vtkConeSource&amp;gt;::New();
coneSource-&amp;gt;SetRadius(.2);
coneSource-&amp;gt;SetHeight(.5);
coneSource-&amp;gt;SetCenter(0, 0, 0);
  
  
vtkSmartPointer&amp;lt;vtkPolyDataMapper&amp;gt; coneMapper =
    vtkSmartPointer&amp;lt;vtkPolyDataMapper&amp;gt;::New();
coneMapper-&amp;gt;SetInputConnection(coneSource-&amp;gt;GetOutputPort());
vtkSmartPointer&amp;lt;vtkActor&amp;gt; coneActor =
    vtkSmartPointer&amp;lt;vtkActor&amp;gt;::New();
coneActor-&amp;gt;SetMapper(coneMapper);
  
vtkSmartPointer&amp;lt;vtkActor&amp;gt; oriConeActor =
    vtkSmartPointer&amp;lt;vtkActor&amp;gt;::New();
oriConeActor-&amp;gt;SetMapper(coneMapper);
  
render-&amp;gt;AddActor(oriConeActor);
  
double AXIS_LEN = 1.0;
vtkSmartPointer&amp;lt;vtkAxesActor&amp;gt; oriAxesActor =
    vtkSmartPointer&amp;lt;vtkAxesActor&amp;gt;::New();
oriAxesActor-&amp;gt;SetPosition(0, 0, 0);
oriAxesActor-&amp;gt;SetTotalLength(AXIS_LEN, AXIS_LEN, AXIS_LEN);
oriAxesActor-&amp;gt;SetShaftType(0);
oriAxesActor-&amp;gt;SetAxisLabels(0);
oriAxesActor-&amp;gt;SetCylinderRadius(0.02);
  
  
render-&amp;gt;AddActor(oriAxesActor);
  
renWin-&amp;gt;AddRenderer( render );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5, Build and run
You will get:
&lt;img src=&quot;/assets/img/couse3.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sat, 04 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/04/vtk-course4.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/04/vtk-course4.html</guid>
			</item>
		
			<item>
				<title>VTK 3 - Cone and Outline</title>
				<description>&lt;p&gt;Base on couse 2, Changed step 4 to&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;4, Create a QVTKOpenGLWidget&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//step 0: set it to a window:
auto vw = new  QVTKOpenGLWidget(this) ;
vtkRenderWindow *renWin = vw-&amp;gt;GetRenderWindow();
ui-&amp;gt;tabWidget-&amp;gt;addTab( vw, __FUNCTION__);

vtkRenderer *render= vtkRenderer::New();

render-&amp;gt;SetBackground( 0.1, 0.2, 0.4 );

vtkSmartPointer&amp;lt;vtkConeSource&amp;gt; coneSource = vtkSmartPointer&amp;lt;vtkConeSource&amp;gt;::New();
coneSource-&amp;gt;SetRadius(.2);
coneSource-&amp;gt;SetHeight(.5);
coneSource-&amp;gt;SetCenter(0, 0, 0);


vtkSmartPointer&amp;lt;vtkPolyDataMapper&amp;gt; coneMapper =
  vtkSmartPointer&amp;lt;vtkPolyDataMapper&amp;gt;::New();
coneMapper-&amp;gt;SetInputConnection(coneSource-&amp;gt;GetOutputPort());
vtkSmartPointer&amp;lt;vtkActor&amp;gt; coneActor =
  vtkSmartPointer&amp;lt;vtkActor&amp;gt;::New();
coneActor-&amp;gt;SetMapper(coneMapper);

vtkSmartPointer&amp;lt;vtkActor&amp;gt; oriConeActor =
  vtkSmartPointer&amp;lt;vtkActor&amp;gt;::New();
oriConeActor-&amp;gt;SetMapper(coneMapper);


// added outline
  vtkSmartPointer&amp;lt;vtkOutlineFilter&amp;gt; outline =
  vtkSmartPointer&amp;lt;vtkOutlineFilter&amp;gt;::New();
  outline-&amp;gt;SetInputConnection(coneSource-&amp;gt;GetOutputPort());

  vtkSmartPointer&amp;lt;vtkPolyDataMapper&amp;gt; outlineMapper =
  vtkSmartPointer&amp;lt;vtkPolyDataMapper&amp;gt;::New();
  outlineMapper-&amp;gt;SetInputConnection(outline-&amp;gt;GetOutputPort());

  vtkSmartPointer&amp;lt;vtkActor&amp;gt; outlineActor =
  vtkSmartPointer&amp;lt;vtkActor&amp;gt;::New();
  outlineActor-&amp;gt;SetMapper(outlineMapper);
  outlineActor-&amp;gt;GetProperty()-&amp;gt;SetColor(0, 0, 0);


render-&amp;gt;AddActor(oriConeActor);
render-&amp;gt;AddActor(outlineActor);
renWin-&amp;gt;AddRenderer( render );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5, Build and run
You will get:
&lt;img src=&quot;/assets/img/couse2.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can download the whole source code from &lt;a href=&quot;https://github.com/SharkLib/SharkLib/tree/master/VTK/Course3&quot;&gt;Course-3&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Fri, 03 Jan 2020 18:48:05 -0500</pubDate>
				<link>http://localhost:4000/vtk/2020/01/03/vtk-course3.html</link>
				<guid isPermaLink="true">http://localhost:4000/vtk/2020/01/03/vtk-course3.html</guid>
			</item>
		
	</channel>
</rss>
